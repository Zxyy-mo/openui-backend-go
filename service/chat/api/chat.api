type (
	// 产品创建
	CreateRequest {
		UserId   string `json:"userId"`
		Title    string `json:"title"`
		Chat     string `json:"chat"`
		ShareId  string `json:"shareId"`
		Archived int64  `json:"archived"`
	}
	CreateResponse {
		Id int64 `json:"id"`
	}
	// 产品创建
	// 产品修改
	UpdateRequest {
		Id       int64  `json:"id"`
		UserId   string `json:"userId"`
		Title    string `json:"title"`
		Chat     string `json:"chat"`
		ShareId  string `json:"shareId"`
		Archived int64  `json:"archived"`
	}
	UpdateResponse  {}
	// 产品修改
	// 产品删除
	RemoveRequest {
		Id int64 `json:"id"`
	}
	RemoveResponse  {}
	// 产品删除
	// 产品详情
	DetailRequest {
		Id int64 `json:"id"`
	}
	DetailResponse {
		Id       int64  `json:"id"`
		UserId   string `json:"userId"`
		Title    string `json:"title"`
		Chat     string `json:"chat"`
		ShareId  string `json:"shareId"`
		Archived int64  `json:"archived"`
	}
	// 产品详情
	ListRequest  {}
	// 数组 产品详情
	ListResponse {
		Data []DetailResponse `json:"data"`
	}
	VersionResponse {
		Version string `json:"version"`
	}
	ChangelogResponse {
		Changelog string `json:"changelog"`
	}
	ConfigResponse {
		Status                   bool                       `json:"status"`
		Name                     string                     `json:"name"`
		Version                  string                     `json:"version"`
		DefaultLocale            string                     `json:"default_locale"`
		Images                   bool                       `json:"images"`
		DefaultModels            interface{}                `json:"default_models"`
		DefaultPromptSuggestions []DefaultPromptSuggestions `json:"default_prompt_suggestions"`
		TrustedHeaderAuth        bool                       `json:"trusted_header_auth"`
	}
	DefaultPromptSuggestions {
		Title   []string `json:"title"`
		Content string   `json:"content"`
	}
	ModelReponse {
		Models []Model `json:"models"`
	}
	Model {
		Name       string  `json:"name"`
		ModifiedAt string  `json:"modified_at"`
		Size       int64   `json:"size"`
		Digest     string  `json:"digest"`
		Details    Details `json:"details"`
	}
	Details {
		Format            string      `json:"format"`
		Family            string      `json:"family"`
		Families          interface{} `json:"families"`
		ParameterSize     string      `json:"parameter_size"`
		QuantizationLevel string      `json:"quantization_level"`
	}
	Prompt {
		Id      int64  `json:"id"`
		Command string `json:"command"`
		UserId  string `json:"user_id"`
		Title   string `json:"title"`
		Content string `json:"content"`
	}
	PromptResponse {
		Prompts []Prompt `json:"prompts"`
	}
	DefaultModels {
		Models string `json:"models"`
	}
	Chat {
		ID        string `json:"id"`
		Title     string `json:"title"`
		UpdatedAt int    `json:"updated_at"`
		CreatedAt int    `json:"created_at"`
	}
	ChatMessage {
		Chats Chat `json:"chats"`
	}
)

service Chat {
	@handler Version
	get /ollama/api/version returns (VersionResponse)

	@handler OllTags
	get /ollama/api/tags returns (ModelReponse)
}

service Chat {
	@handler Changelog
	get /api/changelog returns (ChangelogResponse)

	@handler Config
	get /api/config returns (ConfigResponse)
}

@server (
	prefix: /api/v1
)
service Chat {
	@handler GetPrompt
	get /prompts returns (PromptResponse)

	@handler GetDefaultModels
	post /configs/default/models (DefaultModels) returns (DefaultModels)
}

@server (
	jwt:    Auth
	prefix: /api/v1
)
service Chat {
	@handler Create
	post /chats/new (CreateRequest) returns (CreateResponse)

	@handler Update
	post /chats/:id (UpdateRequest) returns (UpdateResponse)

	@handler Remove
	delete /chats/:id (RemoveRequest) returns (RemoveResponse)

	@handler List
	get /chats (ListRequest) returns ([]Chat)

	@handler Detail
	get /chats/:id (DetailRequest) returns (DetailResponse)
}

