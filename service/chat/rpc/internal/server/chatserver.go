// Code generated by goctl. DO NOT EDIT.
// Source: chat.proto

package server

import (
	"context"

	"github.com/openui-backend-go/service/chat-rpc/chat"
	"github.com/openui-backend-go/service/chat-rpc/internal/logic"
	"github.com/openui-backend-go/service/chat-rpc/internal/svc"
)

type ChatServer struct {
	svcCtx *svc.ServiceContext
	chat.UnimplementedChatServer
}

func NewChatServer(svcCtx *svc.ServiceContext) *ChatServer {
	return &ChatServer{
		svcCtx: svcCtx,
	}
}

func (s *ChatServer) Create(ctx context.Context, in *chat.CreateRequest) (*chat.CreateResponse, error) {
	l := logic.NewCreateLogic(ctx, s.svcCtx)
	return l.Create(in)
}

func (s *ChatServer) Update(ctx context.Context, in *chat.UpdateRequest) (*chat.UpdateResponse, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *ChatServer) Remove(ctx context.Context, in *chat.RemoveRequest) (*chat.RemoveResponse, error) {
	l := logic.NewRemoveLogic(ctx, s.svcCtx)
	return l.Remove(in)
}

func (s *ChatServer) Detail(ctx context.Context, in *chat.DetailRequest) (*chat.DetailResponse, error) {
	l := logic.NewDetailLogic(ctx, s.svcCtx)
	return l.Detail(in)
}

func (s *ChatServer) ListChat(ctx context.Context, in *chat.Empty) (*chat.ListChats, error) {
	l := logic.NewListChatLogic(ctx, s.svcCtx)
	return l.ListChat(in)
}

func (s *ChatServer) Call(ctx context.Context, in *chat.CallRequest) (*chat.CallResponse, error) {
	l := logic.NewCallLogic(ctx, s.svcCtx)
	return l.Call(in)
}
